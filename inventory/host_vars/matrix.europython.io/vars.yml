# The bare domain name which represents your Matrix identity.
# Matrix user ids for your server will be of the form (`@user:<matrix-domain>`).
#
# Note: this playbook does not touch the server referenced here.
# Installation happens on another server ("matrix.<matrix-domain>").
#
# If you've deployed using the wrong domain, you'll have to run the Uninstalling step,
# because you can't change the Domain after deployment.
#
# Example value: example.com
matrix_domain: europython.io

# This is something which is provided to Let's Encrypt when retrieving SSL certificates for domains.
#
# In case SSL renewal fails at some point, you'll also get an email notification there.
#
# If you decide to use another method for managing SSL certifites (different than the default Let's Encrypt),
# you won't be required to define this variable (see `docs/configuring-playbook-ssl-certificates.md`).
#
# Example value: someone@example.com
matrix_ssl_lets_encrypt_support_email: 'board@europython.eu'

# A shared secret (between Coturn and Synapse) used for authentication.
# You can put any string here, but generating a strong one is preferred (e.g. `pwgen -s 64 1`).
matrix_coturn_turn_static_auth_secret: "{{ secrets_matrix_coturn_turn_static_auth_secret }}"

# A secret used to protect access keys issued by the server.
# You can put any string here, but generating a strong one is preferred (e.g. `pwgen -s 64 1`).
matrix_synapse_macaroon_secret_key: "{{ secrets_matrix_synapse_macaroon_secret_key }}"

# A Postgres password to use for the superuser Postgres user (called `matrix` by default).
#
# The playbook creates additional Postgres users and databases (one for each enabled service)
# using this superuser account.
matrix_postgres_connection_password: "{{ secrets_matrix_postgres_connection_password }}"

matrix_synapse_federation_enabled: false

matrix_docker_installation_enabled: false

# The admin
matrix_synapse_admin_enabled: true

# Enable epcon authentication
matrix_synapse_ext_password_provider_epcon_auth_enabled: true
matrix_synapse_ext_password_provider_epcon_auth_endpoint: 'https://epstage.europython.eu/api/v1/isauth/'
matrix_synapse_ext_password_provider_epcon_auth_admin_user: '@fp39304:europython.io'

# Not sure why we need these rate limiters...
matrix_synapse_rc_joins:
  local:
    per_second: 0.001
    burst_count: 30

# Emable our Matrix Dimension Integration server
matrix_dimension_enabled: true
matrix_dimension_access_token: "{{ secrets_matrix_dimension_access_token }}"
matrix_dimension_admins:
  - "@fp39304:europython.io" 
  # - "@malemburg:europython.io"
  # - "@rd38812:europython.io"
  # - "@mc56315:europython.io" 
  # - "@ladybiss:europython.io" 
  # - "@sm6xmm:europython.io" 
  # - "@ch34964:europython.io" 
  # - "@85054441ee:europython.io"

# custom Europython element client.
matrix_client_element_docker_image: "europython/europython-element-web"

# Let's extend the synapse config to add our own custom rules.
matrix_synapse_container_additional_volumes: 
  - src: "{{ europython_synapse_packages_volume }}/epmatrix"
    dst: "{{ matrix_synapse_in_container_python_packages_path }}/epmatrix"
    options: ro
matrix_synapse_configuration_extension_yaml: |
  third_party_event_rules:
    module: "epmatrix.SuperRulesSet"
